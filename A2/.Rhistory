knitr::opts_chunk$set(echo = TRUE)
(media_teorica = 0*64/125+1*48/125+2*12/125+3*1/125)
(varianza_teorica = (0-media_teorica)^2*64/125+(1-media_teorica)^2*48/125+(2-media_teorica)^2*12/125+(3-media_teorica)^2*1/125)
k = 100000
mediasMuestrales = replicate(k, {
muestra = sample(0:3, size=10, replace=T, prob = c(64, 48, 12, 1))
mean(muestra)
})
mean(mediasMuestrales)
library(ggplot2)
library(tidyverse)
mediasMuestrales %>%
as_tibble %>%
ggplot() +
geom_histogram(aes(x = value), bins = 15, fill="orange", color="black") +
geom_vline(xintercept = mean(mediasMuestrales),
col="blue", linetype="dashed", size=1.5)
k2 = 100000
mediasMuestrales2 = replicate(k2, {
muestra = sample(0:3, size=30, replace=T, prob = c(64, 48, 12, 1))
mean(muestra)
})
mean(mediasMuestrales2)
library(ggplot2)
library(tidyverse)
mediasMuestrales2 %>%
as_tibble %>%
ggplot() +
geom_histogram(aes(x = value), bins = 20, fill="orange", color="black") +
geom_vline(xintercept = mean(mediasMuestrales),
col="blue", linetype="dashed", size=1.5)
library(tidyverse)
X1 <- tibble(valor = c(0,1,2), prob = c(1/2,1/4,1/4))
X2 <- tibble(valor = c(0,1,2,3), prob = c(64/125,48/125,12/125,1/125))
sol <- tibble(valor = c(0:5), prob=c(1/2*64/125,1/2*48/125+64/125*1/4,1/2*12/125+64/125*1/4+1/4*48/125,1/4*12/125+48/125*1/4+1/2*1/125,1/4*1/125+1/4*12/125,1/4*1/125))
mediaX1 <- X1 %>%
mutate(producto = valor*prob) %>%
summarise(media = sum(producto))
mediaX1
mediaX2 <- X2 %>%
mutate(producto = valor*prob) %>%
summarise(media = sum(producto))
mediaX2
(mediaTeorica <- mediaX1+mediaX2)
k = 100000
sumaValores = replicate(k,{
primerValor = sample(X1$valor,size = 1,prob = X1$prob)
segundoValor = sample(X2$valor,size = 1 ,prob = X2$prob)
return(primerValor+segundoValor)
})
mean(sumaValores)
X <- read_csv(url('https://gist.githubusercontent.com/fernandosansegundo/471b4887737cfcec7e9cf28631f2e21e/raw/b3944599d02df494f5903740db5acac9da35bc6f/testResults.csv'))
X
library(tidyverse)
firstMod <- X %>%
pivot_wider(names_from = test_number,values_from = c(week1,week2,week3,week4,week5))
firstMod
secondMod <- firstMod %>%
separate(gender_age, into = c("gender", "age"))
secondMod
X1 <- tibble(valor = c(0,1,2), prob = c(1/2,1/4,1/4))
X2 <- tibble(valor = c(0,1,2,3), prob = c(64/125,48/125,12/125,1/125))
sol <- tibble(valor = c(0:5), prob=c(1/2*64/125,1/2*48/125+64/125*1/4,1/2*12/125+64/125*1/4+1/4*48/125,1/4*12/125+48/125*1/4+1/2*1/125,1/4*1/125+1/4*12/125,1/4*1/125))
sol
#CÃ³digo copiado de internet
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
usr <- par("usr")
on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
Cor <- abs(cor(x, y))
txt <- paste0(prefix, format(c(Cor, 0.123456789), digits = digits)[1])
if(missing(cex.cor)) {
cex.cor <- 0.4 / strwidth(txt)
}
text(0.5, 0.5, txt,
cex = 1 + cex.cor * Cor)
}
pairs(diamonds,
upper.panel = panel.cor,
lower.panel = panel.smooth)
ggplot(data=diamonds, mapping = aes(x=cut,y=carat))+
geom_bar()
ggplot(data=diamonds, mapping = aes(x=cut,y=carat))+
geom_boxplot()
ggplot(data=diamonds, mapping = aes(x=cut,y=price))+
geom_boxplot()
ggplot(data=diamonds, mapping = aes(x=cut,y=price))+
geom_freqpoly()
ggplot(data=diamonds, mapping = aes(x=cut,y=price))+
geom_freqpoly(mapping = aes(color=cut))
ggplot(data = diamonds, mapping = aes(x = carat, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 0.1)
ggplot(data=diamonds, mapping = aes(x=cut,y=carat))+
geom_freqpoly(mapping = aes(color = cut))
ggplot(data=diamonds, mapping = aes(x=cut,y=carat)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 0.1)
ggplot(data=diamonds, mapping = aes(x= ..cut..,y=carat)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 0.1)
ggplot(data=diamonds, mapping = aes(x= carat,y= ..cut..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 0.1)
..cut..
diamonds
..diamonds$cut..
ggplot(data=diamonds, mapping = aes(x=cut,y=carat))+
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = carat, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat, y = ..density..)) +
geom_density(mapping = aes(colour = cut), binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(carat)) +
geom_density(mapping = aes(colour = cut))
ggplot(data=diamonds, mapping = aes(x=cut,y=carat))+
geom_boxplot()
ggplot(diamonds, mapping=aes(x=cut,y=carat))+
geom_bar(mapping = aes(color = cut))
gridExtra::grid.arrange(plot1,plot2)
plot1 <- ggplot(data=diamonds, mapping = aes(x=cut,y=carat))+
geom_boxplot()
plot2 <- ggplot(data = diamonds, mapping = aes(carat)) +
geom_density(mapping = aes(colour = cut))
gridExtra::grid.arrange(plot1,plot2)
diamonds %>%
group_by(cut,carat) %>%
summarise(suma = sum(cut))
diamonds %>%
group_by(cut,carat) %>%
summarise(suma = count(cut))
ggplot(diamonds, mapping=aes(x=cut,y=carat))+
geom_bar(mapping = aes(color = cut))
ggplot(diamonds, mapping=aes(x=carat,y=count(cut)))+
geom_bar()
ggplot(data = diamonds, mapping = aes(x = carat, y = ..count..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat, y = ..count..)) +
geom_freqpoly(mapping = aes(colour = cut))
ggplot(data = diamonds, mapping = aes(x = carat, y = ..count..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth=0.1)
