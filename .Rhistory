gitcreds::gitcreds_set()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
chlstrl = read.csv(url("https://gist.githubusercontent.com/fsansegundo/ee991e53e1a571dd34034c42b5516eae/raw/2206455b5772e90c5a2a24a3f42a84408fd1d1c5/cholesterol.csv"))
head(chlstrl,5)
chlstrl.summary()
summarise(chlstrl)
class(chlstrl)
length(chlstrl)
detail(chlstrl)
summary(chlstrl)
nrows(chlstrl)
nrow(chlstrl)
ncol(chlstrl)
dim(chlstrl)
summary(chlstrl)
typeof(chlstrl)
summary.default(chlstrl)
dim(chlstrl) # Tiene 403 observaciones
summary.default(chlstrl)
knitr::opts_chunk$set(echo = TRUE)
v = seq(from = 0, to = 300, by = 3)
head(v, 20)
sum(v)
mean(v)
length(v)
(dado_honesto <- sample(1:6,size=100,replace = TRUE))
#Frecuencias absolutas
table(dado_honesto)
dado_honesto <- data.frame(n = dado_honesto)
dado_honesto %>%
count(n)
#Frecuencias relativas
signif(prop.table(table(dado_honesto$n)), 2)
(dado_cargado <- data.frame(n=sample(1:6,size=100,replace = TRUE, prob = c(1,1,1,1,1,2))))
#Frecuencias absolutas
table(dado_cargado)
dado_cargado %>%
count(n)
#Frecuencias relativas
signif(prop.table(table(dado_cargado$n)), 2)
(v1 <- rep(seq(from=4,to=1,by=-1), each = 4))
(v2 <- rep(seq(from=1,to=5,by=1), times=c(1,2,3,4,5)))
(v3 <- rep(seq(from=1,to=4,by=1), times = 4))
library(tidyverse)
(mpg2 <- mpg %>%
select(starts_with("c")) %>%
filter(class == "pickup"))
library(haven)
(X <- read_dta(file= "census.dta"))
#5.1
(poblaciones_agrupadas <- X %>% group_by(region) %>% summarise(suma_poblacion = sum(pop)))
#5.2
#barplot(names.arg =poblaciones_agrupadas$region,height=poblaciones_agrupadas$suma_poblacion)
ggplot(data = poblaciones_agrupadas, aes(x=region,y=suma_poblacion)) +
geom_bar(stat="identity", position="stack")
#5.3
head(X)
X %>% arrange(desc(pop))
#5.4
(tasa_divorcios_matrimonios <- X %>% select(state,marriage,divorce) %>% mutate(marriage,divorce, tasa = marriage/divorce)) %>% arrange(desc(tasa))
#5.5
X %>% select(pop,poplt5,pop5_17,pop18p,pop65p,medage) %>% arrange(desc(medage)) %>% head(10)
#5.6
cortes = seq(min(X$medage), max(X$medage), length.out = 11)
ggplot(data = X, aes(x=medage)) +
geom_histogram(aes(y=stat(density)), breaks = cortes, fill = "orange", color="black")  +
geom_density(color="red")
knitr::opts_chunk$set(echo = TRUE)
v = seq(from = 0, to = 300, by = 3)
head(v, 20)
sum(v)
mean(v)
length(v)
library(tidyverse)
dado_honesto <- sample(1:6,size=100,replace = TRUE)
#Frecuencias absolutas
table(dado_honesto)
dado_honesto <- data.frame(n = dado_honesto)
dado_honesto %>%
count(n)
#Frecuencias relativas
signif(prop.table(table(dado_honesto$n)), 2)
(dado_cargado <- data.frame(n=sample(1:6,size=100,replace = TRUE, prob = c(1,1,1,1,1,2))))
#Frecuencias absolutas
table(dado_cargado)
dado_cargado %>%
count(n)
#Frecuencias relativas
signif(prop.table(table(dado_cargado$n)), 2)
(v1 <- rep(seq(from=4,to=1,by=-1), each = 4))
(v2 <- rep(seq(from=1,to=5,by=1), times=c(1,2,3,4,5)))
(v3 <- rep(seq(from=1,to=4,by=1), times = 4))
library(tidyverse)
(mpg2 <- mpg %>%
select(starts_with("c")) %>%
filter(class == "pickup"))
library(haven)
(X <- read_dta(file= "census.dta"))
#5.1
(poblaciones_agrupadas <- X %>% group_by(region) %>% summarise(suma_poblacion = sum(pop)))
#5.2
#barplot(names.arg =poblaciones_agrupadas$region,height=poblaciones_agrupadas$suma_poblacion)
ggplot(data = poblaciones_agrupadas, aes(x=region,y=suma_poblacion)) +
geom_bar(stat="identity", position="stack")
#5.3
head(X)
X %>% arrange(desc(pop))
#5.4
(tasa_divorcios_matrimonios <- X %>% select(state,marriage,divorce) %>% mutate(marriage,divorce, tasa = marriage/divorce)) %>% arrange(desc(tasa))
#5.5
X %>% select(pop,poplt5,pop5_17,pop18p,pop65p,medage) %>% arrange(desc(medage)) %>% head(10)
#5.6
cortes = seq(min(X$medage), max(X$medage), length.out = 11)
ggplot(data = X, aes(x=medage)) +
geom_histogram(aes(y=stat(density)), breaks = cortes, fill = "orange", color="black")  +
geom_density(color="red")
is.nan(chlstrl)
chlstrl.is.nan()
nan_values = chlstrl[is.na(chlstrl)]
(nan_values = chlstrl[is.na(chlstrl)])
(nan_values = is.na(chlstrl))
(nan_values = which(is.na(chlstrl)))
N = 1000000
poblacion = runif(N)
(varPob = sum(poblacion-mean(poblacion))^2)/N
(varPob = mean(poblacion-mean(poblacion))^2)
(varPob = sum(poblacion-mean(poblacion))^2)/N
(varPob = sum(poblacion-mean(poblacion))^2)/N
(varPob = mean(poblacion-mean(poblacion))^2)
(varPob = sum((poblacion-mean(poblacion))^2)/N
(varPob = sum((poblacion-mean(poblacion))^2)/N
(varPob = mean((poblacion-mean(poblacion))^2)
(varPob = mean((poblacion-mean(poblacion))^2))
(varPob = sum((poblacion-mean(poblacion))^2)/N
poblacion = runif(N)
(varPob = sum((poblacion - mean(poblacion))^2)/N)
(varPob = mean((poblacion-mean(poblacion))^2))
muestras = replicate(K , {
muestra = sample(poblacion,n,replace = TRUE)
varMal = sum((muestra - mean(muestra))^2) / n
varMal = sum((muestra - mean(muestra))^2) / (n-1)
c(varMal = varMal, varBien = varBien) #nombre de columnas
})
K = 5000
n = 100
varMal = numeric(K)
varBien = numeric(K)
muestras = replicate(K , {
muestra = sample(poblacion,n,replace = TRUE)
varMal = sum((muestra - mean(muestra))^2) / n
varMal = sum((muestra - mean(muestra))^2) / (n-1)
c(varMal = varMal, varBien = varBien) #nombre de columnas
})
muestras = t(muestras) #transposicion
head(muestras)
muestras = replicate(K , {
muestra = sample(poblacion,n,replace = TRUE)
varMal = sum((muestra - mean(muestra))^2) / n
varBien = sum((muestra - mean(muestra))^2) / (n-1)
c(varMal = varMal, varBien = varBien) #nombre de columnas
})
muestras = t(muestras) #transposicion
head(muestras)
summarise(mediaVarMal = mean(varMal), mediaVarBien = mean(varBien))
head(chlstrl)
